name: Create Kodi Addon Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get addon info
      id: addon_info
      shell: bash
      run: |
        # Extract values with simple grep
        ADDON_ID=$(grep -o 'id="[^"]*"' addon.xml | cut -d'"' -f2)
        ADDON_VERSION=$(grep -o 'version="[^"]*"' addon.xml | cut -d'"' -f2)
        
        # Debug what we found
        echo "Found ADDON_ID: $ADDON_ID"
        echo "Found ADDON_VERSION: $ADDON_VERSION"
        
        # Set outputs with proper format
        echo "ADDON_ID=$ADDON_ID" >> $GITHUB_ENV
        echo "ADDON_VERSION=$ADDON_VERSION" >> $GITHUB_ENV
      
    - name: Create release zip
      run: |
        mkdir -p ../zip_release
        cp -r . "../zip_release/${{ env.ADDON_ID }}"
        cd ../zip_release
        find . -name '.git*' -print0 | xargs -0 rm -rf
        find . -name '__pycache__' -print0 | xargs -0 rm -rf
        find . -name '*.pyc' -print0 | xargs -0 rm -rf
        find . -name '.DS_Store' -print0 | xargs -0 rm -rf
        zip -r "${{ env.ADDON_ID }}-${{ env.ADDON_VERSION }}.zip" "${{ env.ADDON_ID }}"
        mv "${{ env.ADDON_ID }}-${{ env.ADDON_VERSION }}.zip" ../
        cd ..
        
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.ADDON_VERSION }}
        name: Release v${{ env.ADDON_VERSION }}
        draft: false
        prerelease: false
        files: ${{ env.ADDON_ID }}-${{ env.ADDON_VERSION }}.zip
        body: |
          Kodi Addon Release v${{ env.ADDON_VERSION }}
          
          ## Installation
          1. Download the zip file
          2. In Kodi, go to Settings > Add-ons > Install from zip file
          3. Navigate to the downloaded zip file and select it
          4. The addon will be installed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}